{"version":3,"file":"js/523.3dfb6687.js","mappings":"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","sources":["webpack://everlasting/./src/views/user/index.vue","webpack://everlasting/./src/views/user/components/menu.vue","webpack://everlasting/./src/components/CharacterSelector.vue","webpack://everlasting/src/components/CharacterSelector.vue","webpack://everlasting/./src/components/CharacterSelector.vue?6261","webpack://everlasting/./src/components/CharacterSelector.vue?b155","webpack://everlasting/src/views/user/components/menu.vue","webpack://everlasting/./src/views/user/components/menu.vue?cd6f","webpack://everlasting/./src/views/user/components/menu.vue?243e","webpack://everlasting/./src/views/user/components/content.vue","webpack://everlasting/./node_modules/easy-typer-js/src/lib/index.js","webpack://everlasting/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://everlasting/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://everlasting/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://everlasting/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://everlasting/./node_modules/marked/lib/marked.esm.js","webpack://everlasting/src/views/user/components/content.vue","webpack://everlasting/./src/views/user/components/content.vue?633c","webpack://everlasting/./src/views/user/components/content.vue?2878","webpack://everlasting/./src/views/user/components/send.vue","webpack://everlasting/src/views/user/components/send.vue","webpack://everlasting/./src/views/user/components/send.vue?fc8d","webpack://everlasting/./src/views/user/components/send.vue?07ea","webpack://everlasting/src/views/user/index.vue","webpack://everlasting/./src/views/user/index.vue?212a","webpack://everlasting/./src/views/user/index.vue?3117"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"contents\"},[_c('div',{staticClass:\"body\",class:{\n    'phone': _vm.phone ? true : false\n  }},[_c('div',{staticClass:\"main_home\"},[(!_vm.phone)?_c('div',{class:!_vm.isCollapse ? 'left' : 'left_collapsed'},[_c('Menu',{attrs:{\"total\":_vm.totals,\"kit-list\":_vm.kitList,\"chat-list\":_vm.chatList,\"user-info\":_vm.userInfo},on:{\"addList\":_vm.addList,\"changeChat\":_vm.changeChat,\"message-history-updated\":_vm.handleMessageHistoryUpdated,\"changeCollapse\":_vm.handleToggleCollapse}})],1):_vm._e(),_c('div',{staticClass:\"chat_right\"},[(_vm.isActive == 0)?_c('Content',{attrs:{\"messageHistory\":_vm.messageHistory,\"dialogueNoUpdate\":_vm.dialogueNoUpdate}}):_vm._e()],1)]),_c('div',[(_vm.isActive == 0)?_c('SendText',{attrs:{\"sendMessage\":_vm.sendMessage},on:{\"sendMsgStatus\":_vm.handleSendMsgStatusUpdated,\"newMessages-updated\":_vm.handleNewMsgUpdated,\"total\":_vm.total}}):_vm._e()],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"menu_box\",class:{ 'phone': _vm.phone ? true : false },staticStyle:{\"padding\":\"20px\"}},[_c('el-button',{style:({width: '100%'}),attrs:{\"type\":\"primary\",\"icon\":!_vm.isCollapse ? 'el-icon-s-fold' : 'el-icon-s-unfold'},on:{\"click\":_vm.toToggleCollapse}}),_c('div',[_c('character-selector',{on:{\"select\":_vm.handleSelect}}),(_vm.selectedOption)?_c('div',[_c('p',[_vm._v(\"角色: \"+_vm._s(_vm.selectedOption.botName))]),_c('p',[_vm._v(\"角色ID: \"+_vm._s(_vm.selectedOption.id))])]):_vm._e()],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-select',{ref:\"select\",staticClass:\"custom-select\",attrs:{\"placeholder\":\"请选择角色\"},on:{\"change\":_vm.handleSelectChange,\"visible-change\":_vm.handleVisibleChange},model:{value:(_vm.selectedValue),callback:function ($$v) {_vm.selectedValue=$$v},expression:\"selectedValue\"}},[_vm._l((_vm.options),function(option){return _c('el-option',{key:option.id,attrs:{\"label\":option.botName,\"value\":option.id}},[_c('span',{staticStyle:{\"float\":\"left\"}},[_vm._v(_vm._s(option.botName))]),_c('span',{staticStyle:{\"float\":\"right\",\"color\":\"#8492a6\",\"font-size\":\"13px\"}},[_vm._v(_vm._s(option.id))])])}),(_vm.isLoading)?_c('el-option',{attrs:{\"disabled\":\"\"}},[_vm._v(\"Loading...\")]):_vm._e()],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n * @Date: 2023-05-10 01:01:02\n * @LastEditors: NullFullme world_view_error@163.com\n * @LastEditTime: 2023-05-10 03:57:27\n * @FilePath: \\everlasting\\src\\components\\CharacterSelector.vue\n * @Description: Waiting for the supplement\n-->\n<template>\n    <!-- <div class=\"toolbar\">\n        <div class=\"select_ai\">\n            <el-select v-model=\"selectedId\" placeholder=\"请选择角色\">\n                <el-option v-for=\"item in ai_list\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                </el-option>\n            </el-select>\n        </div>\n    </div> -->\n    <el-select v-model=\"selectedValue\" \n    @change=\"handleSelectChange\" \n    @visible-change=\"handleVisibleChange\"\n    ref=\"select\" \n    placeholder=\"请选择角色\" \n    class=\"custom-select\"\n    >\n    <el-option v-for=\"option in options\" \n    :key=\"option.id\" \n    :label=\"option.botName\" \n    :value=\"option.id\"\n    >\n      <span style=\"float: left\">{{ option.botName }}</span>\n      <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ option.id }}</span>\n    </el-option>\n    <el-option v-if=\"isLoading\" disabled>Loading...</el-option>\n  </el-select>\n</template>\n\n<script>\nexport default {\n  name: 'CharacterSelector',\n  data() {\n    return {\n      selectedValue: '',\n      options: [],\n      isLoading: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0\n    };\n  },\n  mounted() {\n    this.loadData();\n    this.$nextTick(() => {\n    console.log(this.$refs.select.$refs.popper)\n      this.$refs.select.$refs.popper.addEventListener('scroll', this.handleScroll);\n    });\n  },\n  beforeDestroy() {\n    this.$nextTick(() => {\n        console.log(this.$refs.select.$refs.popper)\n      this.$refs.select.$refs.popper.removeEventListener('scroll', this.handleScroll);\n    });\n  },\n  methods: {\n    async loadData() {\n      this.isLoading = true;\n      // 发送异步 HTTP GET 请求获取列表数据，根据 currentPage 和 pageSize 分页参数\n      // 示例使用 axios 库发送请求，你可以根据自己的项目选择合适的库\n      try {\n        const userId = window.localStorage.getItem('userId');\n        await this.$httpGet('GetUserBot',{\n            pageNum: this.currentPage\n        },\n        true, userId,'query').then(res => {\n            let resData = res.data;\n            if (resData.code != 0) {\n                console.log(resData)\n                this.$alert(resData.msg, '提示')\n            } else {\n                const { contentList, total } = resData.data;\n                this.options = this.options.concat(contentList.map(item => ({\n                    id: item.id,\n                    botName: item.botName,\n                    botType: item.botType,\n                    botDesc: item.botDesc,\n                    usageCount: item.usageCount\n                })));\n                //数量更新\n                this.total += total;\n                this.isLoading = false;\n            }\n        })\n      } catch (error) {\n        console.error('Failed to load data:', error);\n        this.isLoading = false;\n      }\n    },\n    //滚动触底更新\n    handleScroll(event) {\n      const target = event.target;\n      if (target.scrollTop + target.clientHeight >= target.scrollHeight && this.options.length < this.total) {\n        // 下拉框触底，继续加载分页数据\n        this.currentPage++;\n        this.loadData();\n      }\n    },\n    handleSelectChange(value) {\n      if (value !== '') {\n        // const selectedOption = this.options.find(option => option.value === value);\n        const selectedOption = this.options.find(option => option.id === value);\n        if (selectedOption) {\n          // 向父组件传递选中的选项内容及其他值\n          this.$emit('select', {\n            id: selectedOption.id,\n            botName: selectedOption.botName,\n            botType: selectedOption.botType,\n            botDesc: selectedOption.botDesc,\n            usageCount: selectedOption.usageCount\n          });\n        }\n      }\n    },\n    //点开或者隐藏下拉框的时候触发更新\n    handleVisibleChange(visible) {\n      if (visible && this.options.length < this.total) {\n        // 下拉框触底，继续加载分页数据\n        console.log(\"触底更新\");\n        this.currentPage++;\n        this.loadData();\n      }\n    }\n  }\n};\n</script>\n\n<style style=\"less\" scoped>\n.custom-select {\n  max-width: 240px;\n  max-height: 182px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CharacterSelector.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CharacterSelector.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CharacterSelector.vue?vue&type=template&id=b332e2ae&scoped=true&\"\nimport script from \"./CharacterSelector.vue?vue&type=script&lang=js&\"\nexport * from \"./CharacterSelector.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CharacterSelector.vue?vue&type=style&index=0&id=b332e2ae&prod&style=less&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b332e2ae\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <!-- 左侧菜单栏组件 -->\n  <div>\n    <div class=\"menu_box\" :class=\"{ 'phone': phone ? true : false }\" style=\"padding:20px\">\n      <!-- 缩放按钮 -->\n      <el-button type=\"primary\" :style=\"{width: '100%'}\" @click=\"toToggleCollapse\"\n      :icon=\"!isCollapse ? 'el-icon-s-fold' : 'el-icon-s-unfold'\"></el-button>\n      <!-- 角色选择下拉框 -->\n      <div>\n        <character-selector @select=\"handleSelect\"/>\n        <div v-if=\"selectedOption\">\n          <p>角色: {{ selectedOption.botName }}</p>\n          <p>角色ID: {{ selectedOption.id }}</p>\n        </div>\n      </div>\n      <!-- 历史消息记录侧边栏显示测试 -->\n      <!-- <div v-for=\"message in messageHistoryMenu\" :key=\"message.id\">\n        <span>question:{{ message.dialogue.question }} </span> - <span>answer:{{ message.dialogue.answer }}</span>\n      </div> -->\n    </div>\n    <!-- <Modal ref=\"show\"></Modal> -->\n  </div>\n</template>\n\n<script>\n// import Modal from './modal.vue'\nimport CharacterSelector from '@/components/CharacterSelector'\nexport default {\n  props: ['chatList', 'userInfo', 'kitList', 'total'],\n  // components: { Modal },\n  components: { CharacterSelector },\n  data() {\n    return {\n      phone: false,\n      isActive: 0,\n      userInfos: {},\n      selectedOption: null,\n      messageHistoryMenu: [],\n      newMessage: '',\n      // 是否收缩\n      isCollapse: false\n    }\n  },\n  mounted() {\n    // this.phone = JSON.parse(window.localStorage.getItem('phone'))\n    // 2s延迟后更改userInfos\n    /* setTimeout(() => {\n      console.log(this.$store.state, '00')\n      this.userInfos = this.userInfo\n      this.userInfos.remainingTimes = this.$store.state.total\n    }, 2000) */\n  },\n  computed: {},\n  watch: {\n    // 监听selectedId\n    selectedId: {\n      handler(val) {\n        console.log(\"用户选择角色:\", val);\n        this.getChatHistoryById(val)\n\n      }\n    }\n  },\n  methods: {\n    // 切换收缩组件\n    toToggleCollapse(){\n      this.isCollapse = !this.isCollapse\n      // 通知父组件\n      this.$emit('changeCollapse', this.isCollapse)\n    },\n    // 接受子组件选择的值\n    handleSelect(option) {\n      this.selectedOption = option;\n      console.log(this.selectedOption);\n      this.loadMessageHistory(null); // 第一次进入聊天室，游标为 null\n      console.log(this.messageHistoryMenu);\n    },\n    //加载历史消息\n    async loadMessageHistory(cursor) {\n      try {\n        await this.getChatHistoryById(this.selectedOption.id, cursor)\n        window.localStorage.setItem('botId', this.selectedOption.id)\n        console.log(\"msgHis: \",this.messageHistoryMenu);\n      } catch(err) {\n        console.error('Failed to load message history:', err);\n      }\n    },\n    //旧版个人钱包部分，暂时不理会\n    // addList() {\n    //   if (\n    //     (this.userInfo.type == 0 && this.userInfo.remainingTimes == 0) ||\n    //     (this.userInfo.type == 1 && this.userInfo.dayRemainingTimes == 0)\n    //   ) {\n    //     this.$alert('请先充值，然后进行对话', '提示')\n    //   } else {\n    //     const obj = {\n    //       disabled: true,\n    //       name: 'New Chat',\n    //       chatLists: []\n    //     }\n    //     this.title = ''\n    //     this.chatList.unshift(obj)\n    //     this.$emit('addList', this.chatList)\n    //     this.$emit('close', false)\n    //   }\n    // },\n    // 获取聊天历史记录, 增加游标\n    getChatHistoryById(id, cursor = '') {\n      console.log(\"根据用户id获取记录\", id)\n      //构建请求参数\n      try {\n      const userId = window.localStorage.getItem('userId');\n      let params = {\n        botId: id,\n        userId: parseInt(userId)\n      }\n      //第一次进入聊天室时次参数为Null\n      if( cursor==null ) {\n        params['cursor'] = cursor\n      } else if( cursor=='' ) {\n        \"\"\n      } else {\n        params['cursor'] = cursor\n      }\n      console.log(\"Cursor\",params);\n\n      // 请求历史记录\n      this.$httpPost('GetChatHistory', params, true, '', 'json')\n      .then(res => {\n          // 传递记录\n          console.log(\"该角色记录\", res);\n          let resData = res.data;\n          if(resData.code !=0 ) {\n            console.log(resData)\n            this.$alert(resData.message, '提示')\n          } else {\n            //返回历史消息对象数组\n            console.log(\"msgHisresData.data: \",resData.data);\n            this.messageHistoryMenu = resData.data\n            // 获取到历史消息后触发自定义事件，并传递消息数据给父级组件\n            this.$emit('message-history-updated', this.messageHistoryMenu);\n          }\n        })\n      } catch(err) {\n          console.error(err)\n      }\n    }\n\n  }\n}\n</script>\n\n<style style=\"less\" scoped>\n/* 下拉框的动画效果 */\n.el-select-dropdown {\n  transition: border-color 1s infinite;\n  border-color: #f00;\n  animation: gradient-border 2s linear infinite;\n}\n\n@keyframes gradient-border {\n  0% {\n    border-color: #f00;\n  }\n  14% {\n    border-color: #ff0;\n  }\n  28% {\n    border-color: #0f0;\n  }\n  42% {\n    border-color: #0ff;\n  }\n  57% {\n    border-color: #00f;\n  }\n  71% {\n    border-color: #f0f;\n  }\n  85% {\n    border-color: #f00;\n  }\n  100% {\n    border-color: #f00;\n  }\n}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./menu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./menu.vue?vue&type=template&id=bebdf2f4&scoped=true&\"\nimport script from \"./menu.vue?vue&type=script&lang=js&\"\nexport * from \"./menu.vue?vue&type=script&lang=js&\"\nimport style0 from \"./menu.vue?vue&type=style&index=0&id=bebdf2f4&prod&style=less&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bebdf2f4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',_vm._l((_vm.sortedMessageHistory),function(item,index){return _c('div',{key:index},[(item.dialogue.answer)?_c('div',{staticClass:\"items\"},[_c('div',{staticClass:\"tx\"},[_c('img',{staticStyle:{\"width\":\"40px\",\"height\":\"40px\"},attrs:{\"src\":require('@/assets/images/chat.png')}})]),(!_vm.phone)?_c('div',{staticClass:\"chat_box\"},[(index < _vm.chatList.length - 1 )?_c('div',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}],staticClass:\"markdown-body\",domProps:{\"innerHTML\":_vm._s(item.dialogue.answer)}}):_c('div',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}],staticClass:\"markdown-body\",domProps:{\"innerHTML\":_vm._s(_vm.obj.output)}})]):_c('div',{staticClass:\"chat_box phone\"},[(index < _vm.chatList.length - 1)?_c('div',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}],staticClass:\"markdown-body\",domProps:{\"innerHTML\":_vm._s(item.dialogue.answer)}}):_c('div',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}],staticClass:\"markdown-body\",domProps:{\"innerHTML\":_vm._s(_vm.obj.output)}})])]):_vm._e(),(item.dialogue.question)?_c('div',{staticClass:\"items items_right\"},[(!_vm.phone)?_c('div',{staticClass:\"chat_box\",domProps:{\"innerHTML\":_vm._s(item.dialogue.question)}}):_c('div',{staticClass:\"chat_box phone\",domProps:{\"innerHTML\":_vm._s(item.dialogue.question)}}),_vm._m(0,true)]):_vm._e()])}),0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tx\"},[_c('img',{staticStyle:{\"width\":\"40px\",\"height\":\"40px\"},attrs:{\"src\":\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"}})])\n}]\n\nexport { render, staticRenderFns }","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nclass EasyTyper {\r\n    constructor(obj, input, fn, hooks) {\r\n        checkKeyIsNull(obj);\r\n        checkFieldIsError(obj);\r\n        this.obj = obj;\r\n        this.input = typeof input === 'string' ? [input] : input;\r\n        this.fn = typeof fn === 'function' ? fn : function () { };\r\n        this.hooks = typeof hooks === 'function' ? hooks : function () { };\r\n        this.timer = 0;\r\n        this.typeAction = {\r\n            rollback: this.typedBack.bind(this),\r\n            normal: this.play.bind(this),\r\n            custom: this.fn\r\n        };\r\n        // 实例化完后立即执行打字输出\r\n        this.init();\r\n    }\r\n    // 初始化\r\n    init() {\r\n        this.play();\r\n    }\r\n    // 打字\r\n    play() {\r\n        if (!this.input.length)\r\n            return this.fn(this);\r\n        let i = 0, stop = false, input = this.input.shift() || '';\r\n        this.timer = setInterval(() => {\r\n            if (i === input.length) {\r\n                i = 0;\r\n                stop = true;\r\n                this.closeTimer();\r\n            }\r\n            if (this.obj.isEnd)\r\n                return this.closeTimer();\r\n            if (stop)\r\n                return this.nextTick();\r\n            this.obj.output = input.slice(0, i + 1);\r\n            this.hooks(input.slice(0, i + 1), this);\r\n            i++;\r\n        }, this.obj.speed);\r\n    }\r\n    // 回滚方法\r\n    typedBack() {\r\n        // 如果句子出书完毕，且是句子暂停模式\r\n        if (!this.input.length && this.obj.sentencePause)\r\n            return this.fn(this);\r\n        let input = this.obj.output;\r\n        let i = input.length, stop = false;\r\n        this.timer = setInterval(() => {\r\n            if (i === -1) {\r\n                this.obj.output = '';\r\n                this.hooks('', this);\r\n                i = 0;\r\n                stop = true;\r\n                this.closeTimer();\r\n            }\r\n            if (this.obj.isEnd) {\r\n                this.closeTimer();\r\n                return this.obj.singleBack = false;\r\n            }\r\n            if (stop) {\r\n                this.obj.singleBack = false;\r\n                return (() => {\r\n                    const { length } = this.input;\r\n                    return length ? this.play() : this.fn(this);\r\n                })();\r\n            }\r\n            this.obj.output = input.slice(0, i + 1);\r\n            this.hooks(input.slice(0, i + 1), this);\r\n            i--;\r\n        }, this.obj.backSpeed);\r\n    }\r\n    // 下一次触发方式\r\n    nextTick() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // 等待\r\n            yield this.sleep(this.obj.sleep);\r\n            return this.obj.singleBack ? this.typedBack() : this.getOutputType();\r\n        });\r\n    }\r\n    // 输出方式\r\n    getOutputType() {\r\n        return this.typeAction[this.obj.type](this);\r\n    }\r\n    // 关闭定时器\r\n    closeTimer() {\r\n        clearInterval(this.timer);\r\n    }\r\n    // 线程等待\r\n    sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    // 结束\r\n    close() {\r\n        return this.obj.isEnd = true;\r\n    }\r\n}\r\n// 错误提示语\r\nconst errorTip = (message) => {\r\n    throw new Error(message);\r\n};\r\n// 校验参数完整性\r\nconst checkKeyIsNull = (obj) => {\r\n    const props = {\r\n        output: '',\r\n        type: '',\r\n        isEnd: false,\r\n        speed: 80,\r\n        backSpeed: 40,\r\n        sleep: 3000,\r\n        singleBack: false,\r\n        sentencePause: false\r\n    };\r\n    const propsKeys = Object.keys(props);\r\n    const objKeys = Object.keys(obj);\r\n    if (propsKeys.length !== objKeys.length) {\r\n        errorTip('配置对象错误: 字段数量不正确！');\r\n    }\r\n    propsKeys.forEach(key => {\r\n        if (obj[key] === undefined || obj[key] === null) {\r\n            errorTip('配置对象错误：字段值为null或undefined！');\r\n        }\r\n    });\r\n};\r\n// 检验参数类型\r\nconst checkFieldIsError = (obj) => {\r\n    Object.keys(obj).forEach(key => {\r\n        const proxy = EasyTyperStrategy[key](obj);\r\n        if (proxy.check()) {\r\n            proxy.showTip(key);\r\n        }\r\n    });\r\n};\r\n// 策略分发\r\nconst EasyTyperStrategy = (() => ({\r\n    output: (obj) => {\r\n        return new CheckField(`string`, obj.output);\r\n    },\r\n    type: (obj) => {\r\n        return new CheckField(`string`, obj.type);\r\n    },\r\n    isEnd: (obj) => {\r\n        return new CheckField(`boolean`, obj.isEnd);\r\n    },\r\n    speed: (obj) => {\r\n        return new CheckField(`number`, obj.speed);\r\n    },\r\n    backSpeed: (obj) => {\r\n        return new CheckField(`number`, obj.backSpeed);\r\n    },\r\n    sleep: (obj) => {\r\n        return new CheckField(`number`, obj.sleep);\r\n    },\r\n    singleBack: (obj) => {\r\n        return new CheckField(`boolean`, obj.singleBack);\r\n    },\r\n    sentencePause: (obj) => {\r\n        return new CheckField(`boolean`, obj.sentencePause);\r\n    },\r\n}))();\r\n// 字段校验类\r\nclass CheckField {\r\n    constructor(type, field) {\r\n        this.type = type;\r\n        this.field = field;\r\n    }\r\n    check() {\r\n        return typeof this.field !== `${this.type}`;\r\n    }\r\n    showTip(name) {\r\n        errorTip(`配置对象错误：属性 ${name} 必须为 ${this.type} 类型！`);\r\n    }\r\n}\r\nexport default EasyTyper;\r\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","/**\n * marked v5.0.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkDeprecations(opt, callback) {\n  if (!opt || opt.silent) {\n    return;\n  }\n\n  if (callback) {\n    console.warn('marked(): callback is deprecated since version 5.0.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/using_pro#async');\n  }\n\n  if (opt.sanitize || opt.sanitizer) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n\n  if (opt.highlight || opt.langPrefix) {\n    console.warn('marked(): highlight and langPrefix parameters are deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-highlight.');\n  }\n\n  if (opt.mangle) {\n    console.warn('marked(): mangle parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-mangle.');\n  }\n\n  if (opt.baseUrl) {\n    console.warn('marked(): baseUrl parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-base-url.');\n  }\n\n  if (opt.smartypants) {\n    console.warn('marked(): smartypants parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-smartypants.');\n  }\n\n  if (opt.xhtml) {\n    console.warn('marked(): xhtml parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-xhtml.');\n  }\n\n  if (opt.headerIds || opt.headerPrefix) {\n    console.warn('marked(): headerIds and headerPrefix parameters are deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-gfm-heading-id.');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        block: true,\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        block: false,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html, block) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          out += this.renderer.html(token.text, token.block);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkDeprecations(opt, callback);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","<template>\n  <!-- 对话栏文本组件 -->\n  <div>\n    <!-- 传入排序后的消息列表 -->\n    <div\n      v-for=\"(item,index) in sortedMessageHistory\"\n      :key=\"index\">\n      <!-- AI的回答渲染 -->\n      <div\n        v-if=\"item.dialogue.answer\"\n        class=\"items\">\n        <!-- AI的头像 -->\n        <div class=\"tx\">\n          <img\n            :src=\"require('@/assets/images/chat.png')\"\n            style=\"width:40px;height:40px\">\n        </div>\n        <!-- 根据消息类型渲染 -->\n        <div v-if=\"!phone\"\n          class=\"chat_box \">\n          <!-- 直接高亮显示 -->\n          <div v-highlight\n            class=\"markdown-body\"\n            v-if=\"index < chatList.length - 1 \"\n            v-html=\"item.dialogue.answer\">\n          </div>\n          <!-- markdown渲染 -->\n          <div v-else\n            class=\"markdown-body\"\n            v-highlight\n            v-html=\"obj.output\">\n          </div>\n        </div>\n        <!-- 手机版渲染 -->\n        <div v-else\n          class=\"chat_box phone\">\n          <div v-highlight\n            class=\"markdown-body\"\n            v-if=\"index < chatList.length - 1\"\n            v-html=\"item.dialogue.answer\">\n          </div>\n          <div v-else\n            class=\"markdown-body\"\n            v-highlight\n            v-html=\"obj.output\">\n          </div>\n        </div>\n      </div>\n      <!-- 用户对话渲染 -->\n      <div\n        v-if=\"item.dialogue.question\"\n        class=\"items items_right\">\n        <!-- 非移动用户渲染 -->\n        <div v-if=\"!phone\"\n          class=\"chat_box\"\n          v-html=\"item.dialogue.question\">\n        </div>\n        <!-- 移动用户渲染 -->\n        <div v-else\n          class=\"chat_box phone\"\n          v-html=\"item.dialogue.question\">\n        </div>\n        <!-- 用户头像渲染 -->\n        <div class=\"tx\">\n          <img\n            src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"\n            style=\"width:40px;height:40px\">\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport EasyTyper from 'easy-typer-js'\n// 将marked 引入\nimport { marked } from 'marked'\n// 引入代码高亮样式\nimport 'highlight.js/styles/devibeans.css'\nexport default {\n  props: ['messageHistory', 'dialogueNoUpdate'],\n  data() {\n    return {\n      phone: false,\n      typewriter: '',\n      mdRegex: '',\n      i: 0,\n      timer: 0,\n      chatList: [], //存储消息列表\n      dialogueNoUpdateFlag: true,\n      obj: {  //存储格式化后的输出\n        output: '',\n        isEnd: false,\n        speed: 80,\n        singleBack: true,\n        sleep: 0,\n        type: 'rollback',\n        backSpeed: 0,\n        sentencePause: true\n      }\n    }\n  },\n  computed: {\n    sortedMessageHistory() {\n      console.log(\"sortedMessageHistory\")\n      if(this.chatList.length!=0) {\n        this.chatList.sort((a, b) => a.dialogueNo - b.dialogueNo);\n        //dialogueNo更新与否\n        if(this.dialogueNoUpdateFlag) {\n          console.log(\"dialogueNoUpdated\")\n          // 更新最后的消息历史\n          window.localStorage.setItem('dialogueNo', this.chatList[this.chatList.length - 1].dialogueNo);\n        } else {\n          console.log(\"dialogueNo not update\")\n        }\n      }\n      return this.chatList\n    }\n  },\n  watch: {\n    dialogueNoUpdate: {\n      handler(val) {\n        this.dialogueNoUpdateFlag = val;\n      }\n    },\n    messageHistory: {\n      handler(val) {\n        this.chatList = val\n        if (val.length > 0) {\n          //监听到更新后进入判断是否存在AI的回复，然后使用打字机效果输出最新的回复\n          if (val[val.length - 1].dialogue.answer) {\n            if (this.mdRegex.test(val[val.length - 1].dialogue.answer)) {\n              this.initTyped(marked(val[val.length - 1].dialogue.answer))\n            } else {\n              this.initTyped(val[val.length - 1].dialogue.answer)\n            }\n          }\n          //格式化消息列表内容\n          for (var i = 0; i < val.length; i++) {\n            //判断是否存在AI的回复\n            if (this.mdRegex.test(val[i].dialogue.answer)) {\n              val[i].dialogue.answer = marked(val[i].dialogue.answer)\n            }\n            //判断是否存在提问\n            if (this.mdRegex.test(val[i].dialogue.question)) {\n              val[i].dialogue.question = marked(val[i].dialogue.question)\n            }\n          }\n        }\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    // 正则匹配\n    this.mdRegex = /[#*`|.png]/\n    // 判断是否为移动用户\n    this.phone = JSON.parse(window.localStorage.getItem('phone'))\n    //变量赋值存储使用\n    this.chatList = this.messageHistory\n    //判断消息列表角色类型进行格式化和输出\n    if (this.chatList && this.chatList.length > 0) {\n      //判断是否存在AI的回复\n      if (this.chatList[this.chatList.length - 1].dialogue.answer) {\n        //正则\n        if (this.mdRegex.test(this.chatList[this.chatList.length - 1].dialogue.answer)) {\n          //打字机效果输出\n          this.initTyped(marked(this.chatList[this.chatList.length - 1].dialogue.answer))\n        } else {\n          //打字机效果输出\n          this.initTyped(this.chatList[this.chatList.length - 1].dialogue.answer)\n        }\n      }\n      //格式化文本\n      for (var i = 0; i < this.chatList.length; i++) {\n        //判断是否存在AI的回复\n        if (this.mdRegex.test(this.chatList[i].dialogue.answer)) {\n          this.chatList[i].dialogue.answer = marked(this.chatList[i].dialogue.answer)\n        }\n        //判断是否存在提问\n        if (this.mdRegex.test(this.chatList[i].dialogue.question)) {\n          this.chatList[i].dialogue.question = marked(this.chatList[i].dialogue.question)\n          //测试其他的美化效果\n          // this.chatList[j].dialogue.question = js_beautify(this.chatList[j].dialogue.question)\n        }\n      }\n    }\n  },\n  methods: {\n    getMessageRole(dialogue) {\n      if (dialogue.question) {\n        return \"question-role\";\n      } else if (dialogue.answer) {\n        return \"answer-role\";\n      }\n      return \"\"; // Return an empty string for unknown message roles\n    },\n    initTyped(input, fn, hooks) {\n      const obj = this.obj\n      const typed = new EasyTyper(obj, input, fn, hooks)\n    }\n  }\n}\n</script>\n\n<style>\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./content.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./content.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./content.vue?vue&type=template&id=13d86bd9&\"\nimport script from \"./content.vue?vue&type=script&lang=js&\"\nexport * from \"./content.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"input_box\",class:{'phone':_vm.phone?true:false}},[_c('el-input',{ref:\"index\",staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"textarea\",\"row\":1,\"disabled\":_vm.disabled,\"placeholder\":\"请输入\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.sendChat.apply(null, arguments)}},model:{value:(_vm.sendText),callback:function ($$v) {_vm.sendText=$$v},expression:\"sendText\"}}),_c('el-button',{staticStyle:{\"margin-left\":\"20px\"},attrs:{\"type\":\"success\",\"disabled\":_vm.disabled},on:{\"click\":_vm.sendChat}},[_c('i',{staticClass:\"el-icon-s-promotion\",staticStyle:{\"font-size\":\"20px\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- 正常的对话发送组件，底部文本输入框和发送按钮 -->\n  <div class=\"input_box\"\n    :class=\"{'phone':phone?true:false}\">\n    <!-- 文本输入框 -->\n    <el-input\n      v-model=\"sendText\"\n      type=\"textarea\" :row=\"1\"\n      style=\"width:100%\"\n      ref=\"index\"\n      :disabled=\"disabled\"\n      @keyup.enter.native=\"sendChat\"\n      placeholder=\"请输入\"></el-input>\n    <!-- 发送按钮 -->\n    <el-button type=\"success\"\n      @click=\"sendChat\"\n      :disabled=\"disabled\"\n      style=\"margin-left: 20px;\">\n      <i class=\"el-icon-s-promotion\"\n        style=\"font-size: 20px;\"></i>\n    </el-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['sendMessage'],\n  data() {\n    return {\n      phone: false,\n      sendText: '',\n      obj: {},\n      logId: '',\n      disabled: false,\n      messagesList: [],\n      newMessageList: [],\n      sendMessageList: [],\n      num: 0\n    }\n  },\n  watch: {\n    // 监听props传入\n    sendMessage: {\n      handler(val) {\n        this.sendMessageList = val\n        console.log(\"in Send Message\", this.sendMessageList)\n        // this.obj.messages = val\n        // 缓存发送文本防丢\n        window.localStorage.setItem('messages', JSON.stringify(val))\n        // 组件启用属性\n        this.disabled = false\n      }\n    },\n    //旧版付费次数耗尽禁用组件\n    // num(val) {\n    //   if (val == 0) {\n    //     this.disabled = true\n    //   }\n    // }\n  },\n  created() {\n    // 不知道干嘛的\n    // if (window.localStorage.getItem('logId')) {\n    //   this.$https('REPEST', {\n    //     logId: window.localStorage.getItem('logId'),\n    //     newMessages: window.localStorage.getItem('newMessages')\n    //   }).then(res => {})\n    // }\n  },\n  mounted() {\n    this.phone = JSON.parse(window.localStorage.getItem('phone'))\n    // 存储sendMessageList\n    window.localStorage.setItem('messages', JSON.stringify(this.sendMessageList))\n    // this.getTypes()\n  },\n  methods: {\n    // getTypes() {\n    //   //旧版中用于识别AI类型的接口，现在版本没有\n    //   this.$https('getType', {}).then(res => {\n    //     this.obj.type = res.data.type\n    //     if (res.type == 1) this.num = res.data.dayRemainingTimes\n    //     else this.num = res.data.remainingTimes\n    //     setTimeout(() => {\n    //       if (this.num == 0) {\n    //         this.disabled = true\n    //       }\n    //     }, 500)\n    //   })\n    // },\n    sendChat(event) {\n      //对话发送函数\n\n      // 获取对话次数\n      // let num = this.$store.state.total\n      // 获取对话id,旧版中构建发送数据结构用的\n      // this.obj.logId = ''\n      // if (window.localStorage.getItem('logId')) {\n      //   this.obj.logId = window.localStorage.getItem('logId')\n      // } else {\n      //   this.obj.logId = ''\n      // }\n      // 发送阶段\n      if (this.sendText) {\n        // 发送序号\n        let dialogueNo = window.localStorage.getItem('dialogueNo');\n        // 构建send\n        const send = {\n          botId: parseInt(window.localStorage.getItem('botId')),\n          userId: parseInt(window.localStorage.getItem('userId')),\n          message: this.sendText,\n          deviceType: '',\n          location: '',\n          dialogueNo: dialogueNo + 1, //还没从历史消息那里更新过来，暂时先使用固定的\n        }\n        // 向父组件传递消息作为历史消息更新对话标题用的\n        // this.$emit('title', this.sendText)\n\n        // 存储请求参数并清空输入框\n        // this.obj.messages.push(send)\n        let inputText = {\n          dialogueNo: dialogueNo + 1,\n          dialogue: {\n            question: this.sendText,\n            answer: '发送失败'\n          },\n          sendStatus: null\n        }\n        this.sendText = ''    \n\n        setTimeout(() => {\n          this.disabled = true\n          this.$httpPost('CHAT', send, true, '', 'json').then(res => {\n            let resData = res.data;\n            if (resData.code == 0) { \n              //发送成功，更新sendMessageList\n              this.sendMessageList.push(resData.data.dialogue)\n              // 旧版付费次数\n              // num = num - 1\n              // this.$store.commit('SET_TOTAL', num)\n              this.disabled = false\n              // 向父组件传递使用次数情况，旧版部分内容，弃用\n              // this.$emit('total', num)\n              // 发送完成向父组件传递消息，更新对话内容\n              console.log(\"sendMsgStatus\", true);\n              // 更改inputText状态\n              inputText.sendStatus = true;\n              setTimeout(() => {\n                // 存储新的对话序号\n                window.localStorage.setItem('dialogueNo', resData.data.dialogueNo)\n                // this.newMessageList.push(resData.data)\n                // window.localStorage.setItem('newMessages', resData.data)\n                // 获取到历史消息后触发自定义事件，并传递消息数据给父级组件\n                this.$emit('newMessages-updated', resData.data);\n                this.$emit('sendMsgStatus', true);\n                // this.$https('REPEST', {\n                //   logId: window.localStorage.getItem('logId'),\n                //   newMessages: window.localStorage.getItem('newMessages')\n                // }).then(res => {})\n              }, 500)\n            } else {\n              console.log(\"发送失败\", resData.msg)\n              // 更改inputText状态\n              inputText.sendStatus = false;\n              const objs = {\n                content: '网络异常，请重试。',\n                role: 'assistant'\n              }\n              // 传递box文本\n              console.log(\"inputText\", inputText);\n              this.$emit('newMessages-updated', inputText);\n              // 发送完成向父组件传递消息，更新对话内容\n              console.log(\"sendMsgStatus\", false);\n              this.$emit('sendMsgStatus', false);\n              //旧版中根据一轮的对话长度重置对话并新建会话\n              // if (resData.msg.indexOf('_')) {\n              //   const index = res.msg.indexOf('_')\n              //   const logId = res.msg.substring(index + 1, res.msg.length)\n              //   if (logId && logId.length == 19) {\n              //     window.localStorage.setItem('logId', logId)\n              //     this.chatListss.push(objs)\n              //     setTimeout(() => {\n              //       window.localStorage.setItem('newMessages', JSON.stringify(this.chatListss))\n              //     }, 500)\n              //     this.$https('ADD', { logId: logId, newMessages: JSON.stringify(this.chatListss) }).then(res => {\n              //       this.$emit('ok')\n              //     })\n              //   }\n              // }\n            }\n          })\n        }, 500)\n        //存储inputText\n        // window.localStorage.setItem('inputText', inputText)\n      } else {\n        // 文本框没内容错误提示\n        this.$message.error('请输入')\n      }\n    }\n  }\n}\n</script>\n\n<style>\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./send.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./send.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./send.vue?vue&type=template&id=5b052d50&\"\nimport script from \"./send.vue?vue&type=script&lang=js&\"\nexport * from \"./send.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"contents\">\n    <div class=\"body\" :class=\"{\n      'phone': phone ? true : false\n    }\">\n\n      <div class=\"main_home\">\n        <!-- <el-button @click=\"test\">单击打开抽屉</el-button> -->\n        <div :class=\" !isCollapse ? 'left' : 'left_collapsed'\" v-if=\"!phone\">\n          <!-- <el-drawer\n          :visible.sync=\"$store.state.drawer\"\n          class=\"drawer_box\"\n          style=\"position: absolute;width: '100%';height:'100%';top: 0;left: 0;background-color: #fff;\"\n          z-index=\"-1\"\n          > -->\n          <!-- 新增历史消息监听 -->\n          <Menu @addList=\"addList\"\n          :total=\"totals\"\n          @changeChat=\"changeChat\"\n          :kit-list=\"kitList\"\n          :chat-list=\"chatList\"\n          :user-info=\"userInfo\"\n          @message-history-updated=\"handleMessageHistoryUpdated\"\n          @changeCollapse=\"handleToggleCollapse\">\n          </Menu>\n          <!-- </el-drawer> -->\n        </div>\n        <!-- 历史消息内容出版完成 -->\n        <div\n          class=\"chat_right\">\n          <Content\n            v-if=\"isActive == 0\"\n            :messageHistory=\"messageHistory\"\n            :dialogueNoUpdate=\"dialogueNoUpdate\"\n            >\n          </Content>\n          <!-- 注释图片对话 -->\n          <!-- <ContentPic :messageHistory=\"messageHistory\" v-if=\"isActive == 1\">\n          </ContentPic> -->\n        </div>\n      </div>\n      <!-- 发送对话 -->\n      <div>\n        <SendText v-if=\"isActive == 0\"\n        @sendMsgStatus=\"handleSendMsgStatusUpdated\"\n        @newMessages-updated=\"handleNewMsgUpdated\"\n        @total=\"total\"\n        :sendMessage=\"sendMessage\"\n        >\n        </SendText>\n        <!-- <SendPic @ok=\"getData\"\n          v-if=\"isActive == 1\"\n          @total=\"total\"\n          @chatListss=\"chatListss\">\n        </SendPic> -->\n      </div>\n    </div>\n    <!-- <el-drawer\n      :append-to-body=\"true\"\n      :size=\"'280px'\"\n      @close=\"close\"\n      custom-class=\"drawer_box\"\n      :visible.sync=\"$store.state.drawer\"\n      :direction=\"direction\"\n      :with-header=\"false\">\n      <Menu @addList=\"addList\"\n        @changeChat=\"changeChat\"\n        :total=\"totals\"\n        :kit-list=\"kitList\"\n        @close=\"close\"\n        :chat-list=\"chatList\"\n        :user-info=\"userInfo\">\n      </Menu>\n    </el-drawer> -->\n  </div>\n</template>\n\n<script>\nimport Menu from './components/menu.vue'\nimport Content from './components/content.vue'\n// import ContentPic from './components/content_pic.vue'\nimport SendText from './components/send.vue'\n// import SendPic from './components/sendPic.vue'\nexport default {\n  // components: { Notice, Menu, ContentPic, SendPic, NoticeModal, Content, SendText },\n  // components: { Menu, ContentPic, SendPic, Content, SendText },\n  // components: { Menu, ContentPic, Content, SendText },\n  components: { Menu, Content, SendText },\n  data() {\n    return {\n      cmOptions: {\n        tabSize: 2,\n        mode: 'text/javascript',\n        theme: 'base16-light', // 主题\n        lineNumbers: true,\n        line: true\n      },\n      messageHistory: [],\n      sendMessage: [],\n      dialogueNoUpdate: true,\n      newMessagesContent: null,\n      list: [],\n      ai_list: [],\n      totals: 0,\n      dialogVisibles: false,\n      sendText: '',\n      title: 'New Chat',\n      isActive: 0,\n      userInfo: {},\n      chatLists: [],\n      kitList: [],\n      chatListses: [],\n      direction: 'ltr',\n      chatList: [],\n      oldScrollTop: 0,\n      phone: false,\n      sdState: 0,\n      isOpenBing: 0,\n      notice: '',\n      // 收缩菜单栏\n      isCollapse: false\n    }\n  },\n  created() {\n    console.log(\"http_chat_mode\")\n    console.log(this.$route.params.id)\n    this.selectedId = this.$route.params.id || '';\n    if (this.selectedId == '') {\n      console.log(\"no input\")\n    } else {\n      this.ai_list = [\n        // 其他选项的数据\n        // 将接收到的id添加到ai_list数组中\n        { label: '选项1', value: '1' },\n        { label: '选项2', value: '2' },\n        { label: '选项3', value: this.selectedId }\n      ];\n      console.log(this.ai_list)\n    }\n\n  },\n  beforeMount() {\n\n  },\n\n  mounted() {\n    // this.getSdState()\n    this.phone = JSON.parse(window.localStorage.getItem('phone'))\n    console.log(this.phone, '000')\n    document.querySelector('.box').addEventListener('scroll', this.scrolling)\n    if (this.$route.query && this.$route.query.id) {\n      console.log(122)\n      this.isActive = 1\n    } else {\n      this.isActive = 0\n    }\n    // this.getData()\n  },\n  watch: {\n    chatLists: {\n      handler(val) {\n        console.log(val, '000')\n        this.scrollToBottom()\n      },\n      deep: true\n    }\n  },\n  methods: {\n    // 更改Collapse值，使侧边框做出对应响应\n    handleToggleCollapse(isCollapse){\n      console.log('isCollapse',isCollapse)\n      this.isCollapse = !this.isCollapse\n    },\n    // 新消息更新\n    handleNewMsgUpdated(newMessages) {\n      console.log(\"newMessages\",newMessages)\n      this.newMessagesContent = newMessages\n      // this.messageHistory.push(newMessages)\n      // console.log(\"messageHistory\",this.messageHistory)\n    },\n    //发送状态更新\n    handleSendMsgStatusUpdated(sendMsgStatus) {\n      //true\n      if(sendMsgStatus){\n        //更新发送对话框内容\n        console.log(\"更新内容1\")\n        this.messageHistory.push(this.newMessagesContent)\n        // this.messageHistory.push(window.localStorage.getItem('newMessages'))\n        console.log(\"messageHistory\",this.messageHistory)\n      } else { //false\n        //更新发送对话框内容\n        console.log(\"更新内容2\")\n        // this.messageHistory.push(window.localStorage.getItem('inputText'))\n        this.messageHistory.push(this.newMessagesContent)\n        this.dialogueNoUpdate = sendMsgStatus\n        console.log(\"messageHistory\",this.messageHistory)\n      }\n    },\n    handleMessageHistoryUpdated(messageHistory) {\n      // 处理接收到的历史消息数据\n      // 可以在这里更新父级组件的数据或执行其他逻辑\n      console.log('Received message history:', messageHistory);\n      this.messageHistory = messageHistory;\n    },\n    test() {\n      this.$store.state.drawer = true\n      console.log(this.$store.state.drawer)\n    },\n    getSdState() {\n      this.$https('GETSDSTATE', {}).then(res => {\n        this.sdState = res.data.isOpenSd\n        this.isOpenBing = res.data.isOpenBing\n      })\n    },\n    chatListss(data) {\n      this.chatListses = data\n    },\n    //旧版中切换对话模式的函数，已经遗弃\n    changeChats(e) {\n      if (e == 1) {\n        this.$confirm('画图记录不做保存', '提示', {\n          confirmButtonText: '继续',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.isActive = e\n          this.chatListses = [\n            {\n              content: '',\n              role: 'user'\n            }\n          ]\n        })\n      } else if (e == 2) {\n        this.$router.push('/')\n      } else if (e == 3) {\n        this.$router.push('/user/product')\n      }\n      // else if (e == 4) {\n      //   this.$router.push('/sdPage/index')\n      // }\n      // else if (e == 5) {\n      //   this.$router.push('/newBing/index')\n      // }\n      else {\n        this.isActive = e\n      }\n    },\n    //旧版中切换对话模式的函数，已经遗弃\n    // getData() {\n    //   this.$https('USERHOME', {\n    //     sendType: 0\n    //   }).then(res => {\n    //     this.notice = res.data.content\n    //     this.chatList = res.data.logList\n    //     this.chatList.map(item => {\n    //       this.$set(item, 'disabled', true)\n    //       this.$set(item, 'chatLists', JSON.parse(item.useValue))\n    //       this.$set(item, 'name', item.chatLists[0].content)\n    //     })\n    //     if (this.chatList.length > 0) {\n    //       this.chatLists = this.chatList[0].chatLists\n    //       this.title = this.chatLists[0].content\n    //     } else {\n    //       const obj = {\n    //         disabled: true,\n    //         name: 'New Chat',\n    //         chatLists: []\n    //       }\n    //       this.chatList.push(obj)\n    //       this.chatLists = this.chatList[0].chatLists\n    //     }\n    //     this.kitList = res.data.kitList\n    //     this.userInfo = {\n    //       dayRemainingTimes: res.data.dayRemainingTimes,\n    //       name: res.data.name,\n    //       expirationTime: res.data.expirationTime,\n    //       remainingTimes: res.data.remainingTimes,\n    //       type: res.data.type\n    //     }\n    //     if (res.data.type == 0) {\n    //       this.$store.commit('SET_TOTAL', res.data.remainingTimes)\n    //     } else {\n    //       this.$store.commit('SET_TOTAL', res.data.dayRemainingTimes)\n    //     }\n    //   })\n    // },\n    close(data) {\n      this.drawer = data\n      this.$store.commit('SET_OPEN', data)\n    },\n    addList(data) {\n      this.chatLists = data[0].chatLists\n      this.title = data[0].name\n    },\n    //旧版中切换对话模式的函数，已经遗弃\n    // open() {\n    //   this.$https('REPEST', {\n    //     logId: window.localStorage.getItem('logId'),\n    //     newMessages: window.localStorage.getItem('newMessages')\n    //   }).then(res => { })\n    //   this.$router.push('/user/notice')\n    // },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        var container = this.$el.querySelector('.chat_right')\n        container.scrollTop = container.scrollHeight\n      })\n    },\n    scrolling() {\n      let scrollTop = document.querySelector('.chat_right').scrollTop\n      // 更新——滚动前，滚动条距文档顶部的距离\n      let scrollStep = scrollTop - this.oldScrollTop\n      this.oldScrollTop = scrollTop\n      //判断当前是向上or向下滚动\n      if (scrollStep < 0) {\n        //向上\n        this.scrollFlag = false\n      } else {\n        this.scrollFlag = true\n      }\n    },\n    total(data) {\n      this.totals = data\n    },\n    changeChat(data) {\n      this.title = data.data.name\n      this.chatLists = data.data.chatLists\n      this.drawer = data.show\n      this.$store.commit('SET_OPEN', data.show)\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.contents {\n  .body {\n    border: 1px solid #e6e6e6;\n    border-radius: 10px;\n    overflow: hidden !important;\n    width: calc(85vw - 30px) !important;\n    height: calc(100vh - 120px) !important;\n    position: relative;\n\n    .main_home {\n      display: flex;\n      flex-grow: 1;\n\n      // 正常情况的菜单栏\n      .left {\n        width: 280px;\n        background: #ffffff;\n        height: calc(100vh - 120px);\n        transition: width 0.3s ease;\n\n        // position: relative;\n        .drawer_box {\n          position: absolute;\n          width: '100%';\n          height: '100%';\n          top: 0;\n          /* 与容器顶部对齐 */\n          left: 0;\n          /* 与容器左侧对齐 */\n          z-index: -1;\n          /* 设置层级，确保 Drawer 处于同一层级 */\n          background-color: #fff;\n          /* 设置背景颜色，可根据需要调整 */\n        }\n      }\n\n      // 缩小后的菜单栏\n      .left_collapsed{\n        width: 80px;\n        background: #ffffff;\n        height: calc(100vh - 120px);\n      }\n\n      .toolbar {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        height: 40px;\n        padding: 0 20px;\n        border-bottom: 1px solid #e6e6e6;\n      }\n\n      .select_ai {\n        position: relative;\n        margin-left: 1em;\n        margin-top: 10px;\n      }\n\n      .chat_right {\n        height: calc(100vh - 220px);\n        overflow-y: auto;\n        width: 100%;\n        position: relative;\n\n        .items_right {\n          justify-content: flex-end;\n        }\n\n        .items {\n          display: flex;\n          align-items: flex-start;\n          width: 100%;\n          flex-grow: 1;\n          margin-top: 20px;\n\n          .tx {\n            width: 40px;\n            height: 40px;\n            margin-left: 10px;\n            border-radius: 10px;\n            overflow: hidden;\n            margin-right: 10px;\n          }\n\n          .chat_box {\n            max-width: 60vw;\n            padding: 10px 20px;\n            background: #ffffff;\n            border-radius: 5px;\n            margin: 0 10px;\n          }\n\n          .chat_box.phone {\n            max-width: 60vw;\n            padding: 10px 20px;\n            background: #ffffff;\n            border-radius: 5px;\n            margin: 0 10px;\n          }\n        }\n\n        .items .items_right {\n            .chat_box {\n              margin-left: auto;\n              margin-right: 0;\n            }\n            .tx {\n              margin-right: 10px;\n              margin-left: 0;\n            }\n          }\n      }\n    }\n  }\n}\n\n.tool.phone {\n  width: 100%;\n  left: 0;\n}\n\n.tool {\n  display: flex;\n  height: 40px;\n  background: #ffffff;\n  align-items: center;\n  position: absolute;\n  bottom: 70px;\n  left: 280px;\n  width: calc(100% - 290px);\n  padding-left: 20px;\n\n  .icon {\n    width: 20px;\n    margin: 0 10px;\n    cursor: pointer;\n    filter: grayscale(100%);\n  }\n\n  .icon:hover,\n  .icon.active {\n    filter: grayscale(0);\n  }\n}\n\n.input_box {\n  display: flex;\n  padding: 15px 20px;\n  width: calc(100% - 290px);\n  justify-content: space-between;\n  position: absolute;\n  bottom: 0;\n  left: 270px;\n}\n\n.input_box.phone {\n  display: flex;\n  padding: 15px 20px;\n  width: calc(100% - 30px);\n  justify-content: space-between;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n}\n\n.menu_box.phone {\n  width: 240px;\n  height: calc(100vh - 145px);\n}\n\n.menu_box {\n  width: 240px;\n  padding: 20px;\n  height: calc(100vh - 260px);\n  overflow: auto;\n\n  .btnx {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border: 1px solid #d9d9d9;\n    border-radius: 5px;\n    margin-top: 10px;\n    padding: 10px 5px;\n    cursor: pointer;\n\n    .input {\n      border: 0;\n      outline: none;\n      background: #ffffff;\n    }\n  }\n\n  .btnx.active {\n    border: 1px solid seagreen;\n    color: seagreen;\n\n    .input {\n      color: seagreen;\n    }\n  }\n}\n\n.footer {\n  border-top: 1px solid #d9d9d9;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  flex-grow: 1;\n  height: 80px;\n}\n\n.footer.phone {\n  .lefts {\n    width: 50px !important;\n    height: 50px !important;\n  }\n}</style>\n<style lang=\"scss\">.drawer_box .el-drawer__body {\n  background: #ffffff;\n}</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=0b0792b0&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=0b0792b0&prod&lang=scss&scoped=true&\"\nimport style1 from \"./index.vue?vue&type=style&index=1&id=0b0792b0&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0b0792b0\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","class","phone","_e","isCollapse","attrs","totals","kitList","chatList","userInfo","on","addList","changeChat","handleMessageHistoryUpdated","handleToggleCollapse","isActive","messageHistory","dialogueNoUpdate","sendMessage","handleSendMsgStatusUpdated","handleNewMsgUpdated","total","staticRenderFns","staticStyle","style","width","toToggleCollapse","handleSelect","selectedOption","_v","_s","botName","id","ref","handleSelectChange","handleVisibleChange","model","value","selectedValue","callback","$$v","expression","_l","options","option","key","isLoading","name","data","currentPage","pageSize","mounted","loadData","$nextTick","console","log","$refs","select","popper","addEventListener","handleScroll","beforeDestroy","removeEventListener","methods","userId","window","localStorage","getItem","$httpGet","pageNum","then","res","resData","code","$alert","msg","contentList","concat","map","item","botType","botDesc","usageCount","error","event","target","scrollTop","clientHeight","scrollHeight","length","find","$emit","visible","component","props","components","CharacterSelector","userInfos","messageHistoryMenu","newMessage","computed","watch","selectedId","handler","val","getChatHistoryById","loadMessageHistory","cursor","setItem","err","params","botId","parseInt","$httpPost","message","sortedMessageHistory","index","dialogue","answer","require","directives","rawName","domProps","obj","output","question","_m","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","apply","EasyTyper","constructor","input","fn","hooks","checkKeyIsNull","checkFieldIsError","timer","typeAction","rollback","typedBack","bind","normal","play","custom","init","i","stop","shift","setInterval","closeTimer","isEnd","nextTick","slice","speed","sentencePause","singleBack","backSpeed","sleep","getOutputType","type","clearInterval","ms","setTimeout","close","errorTip","Error","propsKeys","Object","keys","objKeys","forEach","undefined","proxy","EasyTyperStrategy","check","showTip","CheckField","field","_typeof","Symbol","iterator","prototype","_toPrimitive","hint","prim","toPrimitive","call","TypeError","String","Number","_toPropertyKey","arg","_defineProperty","toPropertyKey","defineProperty","enumerable","configurable","writable","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","_","n","toLowerCase","charAt","fromCharCode","substring","caret","edit","regex","opt","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","pop","splice","push","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkDeprecations","warn","repeatString","pattern","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","join","Tokenizer","space","src","rules","block","newline","codeBlockStyle","fences","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","tag","table","header","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","static","lex","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","hasOwnProperty","dryrun","Parser","textRenderer","parser","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","Hooks","preprocess","markdown","postprocess","onError","parseMarkdown","origOpt","marked","throwError","pending","all","catch","Set","setOptions","use","args","childTokens","pack","opts","ext","prevRenderer","prop","prevTokenizer","prevHook","passThroughHooks","has","values","lexInline","typewriter","mdRegex","dialogueNoUpdateFlag","sort","a","dialogueNo","initTyped","deep","JSON","getMessageRole","disabled","nativeOn","$event","_k","keyCode","sendChat","arguments","sendText","logId","messagesList","newMessageList","sendMessageList","num","stringify","created","send","deviceType","location","inputText","sendStatus","$message","Menu","Content","SendText","cmOptions","tabSize","mode","theme","lineNumbers","newMessagesContent","ai_list","dialogVisibles","chatLists","chatListses","direction","oldScrollTop","sdState","isOpenBing","notice","$route","label","beforeMount","document","querySelector","scrolling","query","scrollToBottom","newMessages","sendMsgStatus","$store","drawer","getSdState","$https","isOpenSd","chatListss","changeChats","$confirm","confirmButtonText","cancelButtonText","role","$router","commit","container","$el","scrollStep","scrollFlag","show"],"sourceRoot":""}